import random


class PromptBuilderService:
    """
    Service that generates prompts for the quote generator based on specific guidelines.
    """
    def __init__(self) -> None:
        self.prompt_version = "1.0.0"
        self.base_prompt = """
            Please generate a quote and a caption by strictly following these guidelines:
            First, the response must be in a JSON format with the following keys: quote and caption.
            Second, the quote's requirements are:
            - The quote must be witty and it must convey a deep meaning. 
            - Be truthful about people and human behaviour. 
            - Do not be a clichÃ©.
            - Make sure it is simple to be understood after reading it for the first time.
            - Get inspiration from classic literature and pop culturte. 
            - Be certain that existing quotes are not used when gathering inspiration.
            - Do not use any offensive language.
            - Do not use any copyrighted material.
            - Do not use any brand names.
            - Do not use any names of people.
            - Do not use emojis.
            Third, the caption's requirements are:
            - The caption must reflect on the quote.
            - The caption should also include hashtags relevant to the quote.
            - Use maximum 6 hashtags.
            - The hashtags must all be lower case characters.
        """
        self.extra_prompt = """
            Fourth, the generated quote and caption must have the following characteristics:
            - The quote must convey the emotion of {emotion}.
            - The quote must use the topic of {poetry_topic}.
            - The quote must be written in a {writing_style} writing style.
            - The quote must include the use of {artistical_tool}.
            - The quote must have a maximum of {max_words} words.
        """
        # Define the possible values for the quote characteristics
        # These default values were generated by GPT-4
        self.emotions: list[str] = ["love", "joy", "sadness", "surprise", "guilt",
            "enjoyment", "anticipation", "admiration", "adoration", "aesthetic", 
            "appreciation", "amusement", "awe", "awkwardness", "boredom",
            "calmness", "confusion", "cringe", "curiosity", "desire", 
            "empathy", "excitement", "gratitude", "grief", "hope"]
        self.poetry_topics: list[str] = [
            "Love and Romance",
            "Nature and Seasons",
            "Death and Mourning",
            "Identity and Self-Discovery",
            "Family and Ancestry",
            "Friendship and Relationships",
            "Mental Health and Healing",
            "Beauty and Aesthetics",
            "History and Nostalgia",
            "Dreams and Aspirations",
            "Solitude and Isolation",
            "Art and Creativity",
            "Travel and Adventure",
            "Sorrow and Grief",
            "Celebration and Joy",
            "Animals and Wildlife",
            "Urban Life and Cityscapes",
            "Technology and Modernity",
            "Childhood and Innocence",
            "Time and Memory",
            "Language and Communication",
            "Music and Harmony",
            "Cultural Heritage and Traditions",
            "Change and Transformation",
            "Science and Discovery",
            "Aging and Maturity",
            "Fantasy and Imagination",
            "Loss and Letting Go",
            "Seasons of Life",
            "Mystery and Enigma",
            "Empowerment and Strength",
            "Space and Cosmos",
            "Sustainability and Environment",
            "Daily Life and Routine",
            "Success and Ambition",
            "Education and Learning",
            "Health and Wellness",
            "Humor and Satire",
            "Wealth and Poverty",
            "Freedom and Liberation",
            "Betrayal and Forgiveness",
            "Rain and Weather",
            "Reflection and Contemplation"
        ]
        self.writing_styles: list[str] = ["funny"]
        self.artistical_tools: list[str] = ["irony"]


    def get_prompt_variation(self) -> tuple[str, dict]:
        """
        Generates a random prompt variation that extends the base prompt with quote characteristics.
        """
        # Get random values for the prompt
        emotion = random.choice(self.emotions)
        poetry_topic = random.choice(self.poetry_topics)
        writing_style = random.choice(self.writing_styles)
        artistical_tool = random.choice(self.artistical_tools)
        max_words = random.randint(5, 15)
        prompt_extras = {
            "emotion": emotion,
            "poetry_topic": poetry_topic,
            "writing_style": writing_style,
            "artistical_tool": artistical_tool,
            "max_words": max_words
        }

        # Merge the base prompt with the quote characteristics
        final_prompt = self.base_prompt + self.extra_prompt.format(**prompt_extras)

        return final_prompt, prompt_extras
